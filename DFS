#include <stdio.h>

#define MAX_NODES 100

void dfs(int node, int adjacency_matrix[MAX_NODES][MAX_NODES], int n, int visited[MAX_NODES], int component[MAX_NODES], int *component_size) {
    visited[node] = 1;
    component[(*component_size)++] = node;
    
    for (int neighbor = 0; neighbor < n; ++neighbor) {
        if (adjacency_matrix[node][neighbor] && !visited[neighbor]) {
            dfs(neighbor, adjacency_matrix, n, visited, component, component_size);
        }
    }
}

void find_connected_components(int adjacency_matrix[MAX_NODES][MAX_NODES], int n) {
    int visited[MAX_NODES] = {0};
    
    for (int node = 0; node < n; ++node) {
        if (!visited[node]) {
            int component[MAX_NODES];
            int component_size = 0;
            dfs(node, adjacency_matrix, n, visited, component, &component_size);
            
            printf("Connected Component: ");
            for (int i = 0; i < component_size; ++i) {
                printf("%d ", component[i]);
            }
            printf("\n");
        }
    }
}

int main() {
    int n;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    
    int adjacency_matrix[MAX_NODES][MAX_NODES];
    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            scanf("%d", &adjacency_matrix[i][j]);
        }
    }
    
    find_connected_components(adjacency_matrix, n);
    
    return 0;
}
